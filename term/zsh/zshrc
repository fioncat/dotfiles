autoload -U compinit
compinit -u

source $HOME/dotfiles/term/zsh/lib/completion.zsh
source $HOME/dotfiles/term/zsh/lib/history.zsh
source $HOME/dotfiles/term/zsh/lib/tools.zsh
source $HOME/dotfiles/term/zsh/lib/welcome.zsh
[[ -z "$LS_COLORS" ]] || zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

os_name=$(uname -s)
case $os_name in
  Linux)
    if [[ -d /usr/share/zsh/plugins ]]; then
      syntax_highlighting_path="/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
      autosuggestions_path="/usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
    else
      syntax_highlighting_path="/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
      autosuggestions_path="/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    fi
    ;;
  Darwin)
    brew_path=$(brew --prefix)
    syntax_highlighting_path="$brew_path/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
    autosuggestions_path="$brew_path/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    ;;
  *)
    echo "WARNING: Unsupported OS '$os_name'"
    ;;
esac

if [[ -f $syntax_highlighting_path ]]; then
  source $syntax_highlighting_path
else
  echo "WATNING: zsh-syntax-highlighting not installed"
fi

if [[ -f $autosuggestions_path ]]; then
  source $autosuggestions_path
  bindkey '^E' end-of-line
else
  echo "WATNING: zsh-autosuggestions not installed"
fi

if [ -f $HOME/dotfiles/term/zsh/secrets.sh ]; then
  source $HOME/dotfiles/term/zsh/secrets.sh
else
  echo "WARNING: secrets file not found"
fi

if command -v nvim &> /dev/null; then
  alias vim='nvim'
  alias vi='NVIM_MINI="true" nvim'
else
  echo "WARNING: neovim not installed"
fi

if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
else
  echo "WARNING: starship not installed"
fi

if command -v fzf &> /dev/null; then
  source <(fzf --zsh)
else
  echo "WARNING: fzf not installed"
fi

if command -v roxide &> /dev/null; then
  source <(roxide init zsh)
  alias zz="rox home"
else
  echo "WARNING: roxide not installed"
fi

if command -v kubewrap &> /dev/null; then
  source <(kubewrap init zsh)
else
  echo "WARNING: kubewrap not installed"
fi

if command -v eza &> /dev/null; then
  alias ls="eza"
  alias ll="ls -l"
  alias la="ls -a"
  alias lla="ls -la"
else
  echo "WARNING: eza not installed"
fi

if command -v dust &> /dev/null; then
  alias du="dust -b"
fi

if command -v kubectl &> /dev/null; then
  alias k="kubectl"
  source <(kubectl completion zsh)
else
  echo "WARNING: kubectl not installed"
fi

if command -v cargo &> /dev/null; then
  alias cg="cargo"
else
  echo "WARNING: cargo not installed"
fi

if command -v git &> /dev/null; then
  alias gs="git status"
  alias gl="git pull"
  alias gp="git push"
  alias gpf="git push -f origin"
  alias gps="git push --set-upstream origin"
  alias gck="git checkout"
  alias gr="git restore"
  alias gm="git merge"
  alias gcb="git checkout -b"
  alias gd="git diff"
  alias ga="git add"
  alias gc="git commit"
else
  echo "WARNING: git not installed"
fi

if [[ $os_name == "Linux" ]] && [[ $USER != "root" ]]; then
  alias docker="sudo docker"
fi

# Rolling update every day
$HOME/dotfiles/scripts/rolling.sh
